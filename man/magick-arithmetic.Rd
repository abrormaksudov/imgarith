% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops_arithmetic.R
\name{magick-arithmetic}
\alias{magick-arithmetic}
\alias{+.magick-image}
\alias{-.magick-image}
\alias{*.magick-image}
\alias{/.magick-image}
\title{Arithmetic Operations for Magick Images}
\usage{
\method{+}{`magick-image`}(e1, e2)

\method{-}{`magick-image`}(e1, e2)

\method{*}{`magick-image`}(e1, e2)

\method{/}{`magick-image`}(e1, e2)
}
\arguments{
\item{e1}{First operand (magick image or numeric)}

\item{e2}{Second operand (magick image or numeric)}
}
\value{
A new magick image object resulting from the operation
}
\description{
Implements pixel-wise arithmetic operations for magick images.
Operations can be performed between:
\itemize{
\item Two magick images
\item A magick image and a numeric value
\item A numeric value and a magick image (for commutative operations)
}
}
\details{
Operations between two images are performed channel-wise.
Operations with a numeric value apply the operation to all pixels.
All results wrap around in the range 0-255.

Valid operations:
\itemize{
\item Addition: \code{img + img} or \code{img + n} or \code{n + img} (commutative)
\item Subtraction: \code{img - img} or \code{img - n} (but not \code{n - img})
\item Multiplication: \code{img * img} or \code{img * n} or \code{n * img} (commutative)
\item Division: \code{img / img} or \code{img / n} (but not \code{n / img})
}
}
\examples{
# Create test images
img1 <- magick::image_blank(100, 100, "rgb(100,150,200)")
img2 <- magick::image_blank(100, 100, "rgb(200,100,50)")

# Image-image operations
sum_img <- img1 + img2
diff_img <- img1 - img2
prod_img <- img1 * img2
quot_img <- img1 / img2

# Image-number operations
bright <- img1 + 50     # Add 50 to all channels
dark <- img1 - 30       # Subtract 30 from all channels
double <- img1 * 2      # Double all values
half <- img1 / 2        # Halve all values

# Commutative operations
also_bright <- 50 + img1  # Same as img1 + 50
also_double <- 2 * img1   # Same as img1 * 2

}
