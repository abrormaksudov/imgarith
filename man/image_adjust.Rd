% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/image_adjust.R
\name{image_adjust}
\alias{image_adjust}
\title{Adjust pixel values in an image region}
\usage{
image_adjust(img, x_range, y_range, value, channels = 1:3, clamp = FALSE)
}
\arguments{
\item{img}{Magick image object}

\item{x_range}{Numeric vector specifying range of x coordinates (width)}

\item{y_range}{Numeric vector specifying range of y coordinates (height)}

\item{value}{Numeric value to add to pixel values (can be negative)}

\item{channels}{Numeric vector specifying color channels to modify:
1 for Red, 2 for Green, 3 for Blue.
Defaults to c(1,2,3) for all channels.}

\item{clamp}{Logical, if TRUE values exceeding 255 or below 0 will be clamped
to those bounds. If FALSE (default), values wrap around cyclically.}
}
\value{
Modified magick image object
}
\description{
Modifies pixel values in a specified rectangular region of an image by adding a value.
The resulting values can either wrap around cyclically within 0-255 range or be clamped
to these bounds.
}
\details{
The function modifies pixel values according to the clamp parameter:

When clamp = FALSE (default):
\itemize{
\item Values wrap around in the range 0-255 using modular arithmetic
\item Adding 10 to 250 gives 4 (as 260 \%\% 256 = 4)
\item Subtracting 10 from 5 gives 251 (as -5 \%\% 256 = 251)
}

When clamp = TRUE:
\itemize{
\item Values exceeding 255 are set to 255
\item Values below 0 are set to 0
}

Image dimensions and coordinates use the following system:
\itemize{
\item Width (x) starts from 1 at the left edge
\item Height (y) starts from 1 at the top edge
\item Channels are: 1=Red, 2=Green, 3=Blue
}
}
\examples{
# Create a test image
img <- magick::image_blank(100, 100, "white")

# Make upper left quarter more red by adding 100 (with wraparound)
result1 <- image_adjust(img, 1:50, 1:50, 100, channels = 1)

# Subtract 50 from all channels in center region (with clamping)
result2 <- image_adjust(img, 25:75, 25:75, -50, clamp = TRUE)

# Modify green channel only with clamping
result3 <- image_adjust(img, 1:100, 1:100, 200, channels = 2, clamp = TRUE)

}
